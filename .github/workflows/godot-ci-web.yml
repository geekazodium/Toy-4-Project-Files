# Workflow to publish Godot HTML5 games to GitHub Pages
#
# This script assumes that the project itself is in a subdirectory "project". This 
# folder structure frees up the root of the repository to be used for non-project
# files, such as the README, build folder, or raw assets folder.
#
# Make sure your project is configured for Web export
# to the path `build/web`.

name: 'Publish to GitHub Pages'
on: push

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: toy-4
  PROJECT_PATH: Toy-4-Project-Files

jobs:
  export-web:
    name: Web Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.